diff --git a/src/modules/chrootcfg/chrootcfg.conf b/src/modules/chrootcfg/chrootcfg.conf
index 1f900c2..f20328b 100644
--- a/src/modules/chrootcfg/chrootcfg.conf
+++ b/src/modules/chrootcfg/chrootcfg.conf
@@ -12,3 +12,4 @@ isRank: true
 keyrings:
     - archlinux
     - manjaro
+    - manjaro_jp
diff --git a/src/modules/postcfg/postcfg.conf b/src/modules/postcfg/postcfg.conf
index 1c8651d..313ec25 100644
--- a/src/modules/postcfg/postcfg.conf
+++ b/src/modules/postcfg/postcfg.conf
@@ -2,3 +2,4 @@
 keyrings:
     - archlinux
     - manjaro
+    - manjaro_jp
diff --git a/src/modules/bootloader/main.py b/src/modules/bootloader/main.py
index 0a9e965..6ebd431 100644
--- a/src/modules/bootloader/main.py
+++ b/src/modules/bootloader/main.py
@@ -389,7 +389,7 @@ def get_efi_suffix_generator(name):
     if name.count("${") > 1:
         raise ValueError("EFI ID {!r} contains multiple generators".format(name))
     import re
-    prefix, generator_name = re.match("(.*)\${([^}]*)}$", name).groups()
+    prefix, generator_name = re.match(r"(.*)\${([^}]*)}$", name).groups()
     if generator_name not in ("SERIAL", "RANDOM", "PHRASE"):
         raise ValueError("EFI suffix {!r} is unknown".format(generator_name))
 
diff --git a/src/modules/chrootcfg/main.py b/src/modules/chrootcfg/main.py
index d9f76d5..32a227a 100644
--- a/src/modules/chrootcfg/main.py
+++ b/src/modules/chrootcfg/main.py
@@ -118,7 +118,7 @@ class PacmanController:
         target_env_call(["pacman-key", "--init"])
 
     def populate_keyring(self):
-        target_env_call(["pacman-key", "--populate"] + self.keyrings)
+        target_env_call(["pacman-key", "--populate"])
 
     def parse_output(self, cmd):
         cal_env = os.environ
diff --git a/src/modules/postcfg/main.py b/src/modules/postcfg/main.py
index 5589add..a0d1677 100644
--- a/src/modules/postcfg/main.py
+++ b/src/modules/postcfg/main.py
@@ -45,7 +45,7 @@ class ConfigController:
         target_env_call(["pacman-key", "--init"])
 
     def populate_keyring(self):
-        target_env_call(["pacman-key", "--populate"] + self.keyrings)
+        target_env_call(["pacman-key", "--populate"])
 
     def terminate(self, proc):
         target_env_call(['killall', '-9', proc])
